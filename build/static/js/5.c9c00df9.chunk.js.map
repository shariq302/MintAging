{"version":3,"sources":["lib/Assests/wallet_logo/metamask.svg","lib/Assests/wallet_logo/coinbase.svg","lib/Assests/wallet_logo/walletconnect.svg","lib/Assests/wallet_logo/connectWallet.png","lib/Assests/img_1.svg","lib/Assests/img_2.svg","lib/Assests/wallet_qr.png","lib/Assests/coinbase_qr.png","lib/components/providerOptions.js","lib/components/Walletmodal.js","lib/components/DisconnectModal.js","lib/components/Wallet.js","lib/index.js","Images/COF.gif","screens/Mint.jsx"],"names":["providerOptions","walletlink","package","CoinbaseWalletSDK","options","infuraId","walletconnect","WalletConnect","binancechainwallet","torus","Torus","Walletmodal","props","useWeb3React","active","chainId","account","library","connector","provider","activate","error","deactivate","useState","setAccount","setChainId","setBalance","set_wallet_account","wallet_install","set_wallet_install","wallet_msg","set_wallet_msg","setLoad","useEffect","console","table","localStorage","getItem","get_current_account_details","message","window","ethereum","getAccount","acc","getBalance","balance","func","setItem","injected","InjectedConnector","supportedChainIds","CoinbaseWallet","WalletLinkConnector","url","appName","qrcode","WalletConnect1","WalletConnectConnector","rpcUrl","bridge","connectMetamask","isMetaMask","connectCoinbase","connectWalletconnect","connectWallet","onHide","web3_modal","Web3Modal","cacheProvider","clearCachedProvider","connect","ethers","providers","Web3Provider","listAccounts","accounts","getNetwork","network","connection","networkName","code","request","method","params","eth_accounts","Modal","size","centered","Body","className","Tab","Container","id","defaultActiveKey","Row","Col","sm","Nav","variant","Item","Link","eventKey","onClick","src","connetWallet_img","style","width","backgroundColor","filter","metaMask_img","coinbase_img","wallet_connect_img","icon","faClose","Content","Pane","md","image_first","image_second","color","fontSize","faSpinner","open","coinbase_qr","alt","wallet_connect_qr","web3Modal","DisconnectModal","copyText","setCopyText","copyFunc","log","navigator","clipboard","writeText","walletAddress","disconnect_wallet","clear","sessionStorage","location","reload","faUserCircle","faCheck","faCopy","faRightFromBracket","Wallet","modalShow","setModalShow","disconnectmodalShow","setDisconnectmodalShow","connect_wallet_address","set_connect_wallet_address","wallet_address","get_connect_wallet_address","useMemo","func_wallet","getCurrentWallet","length","isCoinbaseWallet","Button","btn_color","btn_text_color","btn_name","show","warn","Modal_Comp","React","lazy","Header","Banner","Banner1","Footer","Mint","name","setName","des","setDes","price","setPrice","showWallet","set_wallet_address","get_modal_show","set_modal_show","load","data","require","description","fallback","HashLoader","marginTop","gif","xmlns","viewBox","d","transform","fill"],"mappings":"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","file":"static/js/5.c9c00df9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/metamask.595bde1d.svg\";","export default __webpack_public_path__ + \"static/media/coinbase.f4c4bf87.svg\";","export default __webpack_public_path__ + \"static/media/walletconnect.4191ad53.svg\";","export default __webpack_public_path__ + \"static/media/connectWallet.b02153fe.png\";","export default __webpack_public_path__ + \"static/media/img_1.2638bbab.svg\";","export default __webpack_public_path__ + \"static/media/img_2.d36ce8da.svg\";","export default __webpack_public_path__ + \"static/media/wallet_qr.305c9323.png\";","export default __webpack_public_path__ + \"static/media/coinbase_qr.5a5ecdd1.png\";","import WalletConnect from \"@walletconnect/web3-provider\";\r\nimport CoinbaseWalletSDK from \"@coinbase/wallet-sdk\";\r\nimport Torus from \"@toruslabs/torus-embed\";\r\n\r\nexport const providerOptions = {\r\n  walletlink: {\r\n    package: CoinbaseWalletSDK, // Required\r\n    options: {\r\n      infuraId: \"wss://mainnet.infura.io/ws/v3/f7494942e54c448aa39ecad379737ade\" // Required unless you provide a JSON RPC url; see `rpc` below\r\n    }\r\n  },\r\n  walletconnect: {\r\n    package: WalletConnect, // required\r\n    options: {\r\n      infuraId: \"wss://mainnet.infura.io/ws/v3/f7494942e54c448aa39ecad379737ade\" ,\r\n    }\r\n  },\r\n  binancechainwallet: {\r\n    package: true\r\n  },\r\n  torus: {\r\n    package: Torus, \r\n  }\r\n \r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { Button, Container, Spinner } from \"react-bootstrap\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Tab from \"react-bootstrap/Tab\";\r\nimport { WalletLinkConnector } from \"@web3-react/walletlink-connector\";\r\nimport { WalletConnectConnector } from \"@web3-react/walletconnect-connector\";\r\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCancel, faClose, faCross, faSpinner } from \"@fortawesome/free-solid-svg-icons\";\r\nimport metaMask_img from \"../Assests/wallet_logo/metamask.svg\";\r\nimport coinbase_img from \"../Assests/wallet_logo/coinbase.svg\"\r\nimport wallet_connect_img from \"../Assests/wallet_logo/walletconnect.svg\"\r\nimport connetWallet_img from \"../Assests/wallet_logo/connectWallet.png\"\r\nimport image_first from \"../Assests/img_1.svg\"\r\nimport image_second from \"../Assests/img_2.svg\"\r\nimport wallet_connect_qr from \"../Assests/wallet_qr.png\"\r\nimport coinbase_qr from \"../Assests/coinbase_qr.png\"\r\nimport '../components/Wallet.scss'\r\nimport { ethers } from \"ethers\";\r\nimport Web3Modal from \"web3modal\";\r\nimport {providerOptions} from '../components/providerOptions.js'\r\nimport { useWeb3React } from \"@web3-react/core\";\r\n\r\n\r\nfunction Walletmodal(props) {\r\n\r\n    const { active,chainId, account, library, connector,provider, activate, deactivate ,error } =useWeb3React();\r\n   \r\n    const [account1, setAccount] = useState();\r\n    const [chainId1, setChainId] = useState();\r\n    const [wallet_type,set_wallet_type]=useState('');\r\n    const [status, setStatus] = useState(\"\");\r\n    const [balance,setBalance]= useState(null)\r\n    const [wallet_account,set_wallet_account]=useState(null)\r\n    const [wallet_install,set_wallet_install]=useState(false)\r\n    const [wallet_msg,set_wallet_msg]=useState(null);\r\n    // const contractAbi = require(\"../Json/ContractAbi.json\");\r\n    const[load,setLoad]=useState(false);\r\n \r\n    useEffect(()=>{\r\n        setLoad(true)\r\n        console.table('active',active,chainId, account, library, connector,provider,localStorage.getItem('eth_bal'))\r\n        get_current_account_details(props)\r\n        setLoad(false)\r\n\r\n      },[active])\r\n\r\n      useEffect(()=>{\r\n        set_wallet_msg(null)\r\n        if(error){\r\n          set_wallet_msg(null)\r\n          const err=error\r\n          set_wallet_msg(err.message)  \r\n        }\r\n      },[error])\r\n    \r\n    const get_current_account_details=async(props)=>{\r\n      console.table('props props ',props)\r\n      if(window.ethereum){\r\n        if(active){\r\n          setLoad(true)\r\n          const acc= await connector.getAccount()\r\n          const balance=await library.getBalance(acc)\r\n          setBalance(balance/1e18)\r\n          set_wallet_account(acc)\r\n          props.func(acc)\r\n\r\n          localStorage.setItem('eth_bal',balance/1e18)\r\n       \r\n          setLoad(false)\r\n        console.table('acc',acc)\r\n        console.table('balance',balance/1e18)\r\n        }\r\n      }\r\n        \r\n        else{\r\n          console.table('false')\r\n          set_wallet_install(false)\r\n        }\r\n    }\r\n    const injected = new InjectedConnector({  \r\n        supportedChainIds: [1,3,4,5, 42,61,137, 1337,80001] \r\n      });\r\n      \r\n      \r\n      const CoinbaseWallet = new WalletLinkConnector({\r\n        url: `https://polygon-mumbai.g.alchemy.com/v2/7r5JXbmB3DQ8Xj0fKXX58DBna9EJNX4p`,\r\n        appName: \"Web3-react Demo\",\r\n        qrcode: true,\r\n        supportedChainIds: [1, 3, 4, 5, 42],\r\n       });\r\n      \r\n      const WalletConnect1 = new WalletConnectConnector({\r\n        rpcUrl: `https://polygon-mumbai.g.alchemy.com/v2/7r5JXbmB3DQ8Xj0fKXX58DBna9EJNX4p`,\r\n        bridge: \"https://bridge.walletconnect.org\",\r\n        appName: \"Web3-react Demo\",\r\n        qrcode: true,\r\n        supportedChainIds: [1,3,4,5, 42,61,137, 1337,80001],\r\n      });\r\n      const connectMetamask=async()=>{\r\n        set_wallet_msg(null)\r\n\r\n          try{\r\n            if(window.ethereum ){\r\n              set_wallet_install(true)\r\n              if(window.ethereum.isMetaMask){\r\n                localStorage.setItem('check_disconnect',false)\r\n                setLoad(true)\r\n                console.table('connecting to metamask',window.ethereum);\r\n                \r\n                try{\r\n                  await activate(injected)\r\n                  set_wallet_install(true)\r\n\r\n                }\r\n                catch(err){\r\n                  set_wallet_install(false)\r\n                  console.table('😥', err.message);\r\n                }\r\n                setLoad(false)\r\n              }\r\n              if(!window.ethereum.isMetaMask){\r\n              \r\n                set_wallet_install(false)\r\n                console.table('😥 Metamask Not install');\r\n              }\r\n\r\n          \r\n            }\r\n            else{\r\n           \r\n              \r\n                set_wallet_install(false)\r\n            } \r\n          }\r\n          catch(err){\r\n          \r\n         \r\n           \r\n              console.table('😥', err.message);\r\n           \r\n          }\r\n     \r\n    }\r\n    const connectCoinbase=async()=>{\r\n      set_wallet_msg(null)\r\n\r\n      setLoad(true)\r\n          try{\r\n            localStorage.setItem('check_disconnect',false)\r\n            await activate(CoinbaseWallet)\r\n          }\r\n          catch(err){\r\n            console.table('not connected to coinbase ',err);\r\n          }\r\n          console.table('wallet_install',wallet_install) \r\n      }\r\n\r\n    const connectWalletconnect=async()=>{\r\n      set_wallet_msg(null)\r\n\r\n      setLoad(true)\r\n      console.table('connecting to Walletconnect');\r\n      try{\r\n        localStorage.setItem('check_disconnect',false)\r\n        await activate(WalletConnect1)\r\n      }\r\n      catch(err){\r\n        console.table('not connected to WalletConnect ',err);\r\n      }\r\n      console.table('wallet_install',wallet_install) \r\n      setLoad(false)\r\n    }\r\n      const connectWallet = async () => {\r\n        props.onHide(true)\r\n      \r\n        try {\r\n\r\n          const web3_modal = new Web3Modal({\r\n            cacheProvider: true, // optional\r\n            providerOptions // required\r\n          });\r\n          web3_modal.clearCachedProvider();\r\n\r\n\r\n          const provider = await web3_modal.connect();\r\n          const library = new ethers.providers.Web3Provider(provider);\r\n          const accounts = await library.listAccounts();\r\n          const network = await library.getNetwork();\r\n          console.table('provider',provider);\r\n          console.table('accounts',accounts);\r\n          console.table('network',network);\r\n          console.table('library',library);\r\n    \r\n          console.table('library.url',library.connection.url);\r\n          console.table('network.chainId',network.chainId);\r\n         \r\n          let networkName=\"\";\r\n          switch (network.chainId) {\r\n            case 1:\r\n              networkName = \"Mainnet\";\r\n              break;\r\n            case 2:\r\n             networkName = \"Morden\";\r\n             break;\r\n            case 3:\r\n              networkName = \"Ropsten\";\r\n              break;\r\n            case 4:\r\n              networkName = \"Rinkeby\";\r\n              break;\r\n            case 42:\r\n              networkName = \"Kovan\";\r\n              break;\r\n            default:\r\n              networkName = \"Unknown\";\r\n          }\r\n          localStorage.setItem('networkName',networkName);\r\n          if (accounts) {\r\n          setAccount(accounts[0]);\r\n          props.func(accounts[0]);\r\n          localStorage.setItem('check_disconnect',false)\r\n          \r\n          }\r\n          setChainId(network.chainId);\r\n          console.table(chainId)\r\n          console.table(accounts);\r\n        } \r\n        catch (err) {\r\n       \r\n           if (err.code === -32002) {\r\n            window.ethereum.request({\r\n              method: 'wallet_requestPermissions',\r\n              params: [{ eth_accounts: {} }],\r\n            })\r\n           \r\n            console.table(\"user cancel the request,click to retry\");\r\n           \r\n          }\r\n            \r\n        }\r\n      };\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n      \r\n    >\r\n     \r\n      <Modal.Body className=\"p-1\" >\r\n      \r\n     \r\n        <Tab.Container id=\"left-tabs-example \"  defaultActiveKey=\"profile\">\r\n          <Row className=\"p-1 h-100\" >\r\n        \r\n            <Col sm={4} className=\"border_grey\">\r\n              <div className=\"wallet_heading_container\" >\r\n                  <span className=\"wallet_heading\">Connect a Wallet  </span>\r\n              </div>\r\n              <Nav variant=\"pills\" className=\"flex-column\">\r\n                <span className=\"wallet_popular\">Popular</span>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey=\"connectWallet\" onClick={() => { connectWallet() }}><img  src={connetWallet_img} style={{width: '28px', backgroundColor: 'black', filter: 'hue-rotate(104deg)'}} className=\"margin_right\"/> Connect Wallet</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey=\"MetaMask\" onClick={() => { connectMetamask() }}><img src={metaMask_img} className=\"margin_right\"/> MetaMask</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey=\"Coinbase\" onClick={() => { connectCoinbase() }}><img src={coinbase_img} className=\"margin_right\"/> Coinbase Wallet</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey=\"WalletConnect\" onClick={() => { connectWalletconnect() }}><img src={wallet_connect_img} className=\"margin_right\"/> WalletConnect</Nav.Link>\r\n                </Nav.Item>\r\n               \r\n              </Nav>\r\n            </Col>\r\n            <Col sm={8}>\r\n            <div className=\"wallet_heading_container\">\r\n                  <span className=\"wallet_heading\"> <FontAwesomeIcon icon={faClose} onClick={props.onHide} className=\"wallet_close_icon\"  /></span>\r\n                </div>\r\n            <Tab.Content >\r\n            <Tab.Pane eventKey=\"profile\">\r\n                  <Container className=\"modal_inner_container\">\r\n                    <Row>\r\n                        <Col className=\"modal_inner_main_heading\"><span >What is a Wallet?</span></Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={2}><img className=\"modal_inner_img\" src={image_first}/></Col>\r\n                        <Col md={10}>\r\n                            <Row>\r\n                            <Col md={12} className=\"modal_inner_sub_heading\"><span>A Home for your Digital Assets</span></Col>\r\n                            <Col md={12} className=\"modal_inner_sub_text\"><span>Wallets are used to send, receive, store, and display digital assets like Ethereum and NFTs.</span></Col>\r\n                            </Row>\r\n                          \r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"pt-4\">\r\n                        <Col md={2}><img className=\"modal_inner_img\" src={image_second}/></Col>\r\n                        <Col md={10}>\r\n                            <Row>\r\n                            <Col md={12} className=\"modal_inner_sub_heading\"><span>A New Way to Log In</span></Col>\r\n                            <Col md={12} className=\"modal_inner_sub_text\"><span>Instead of creating new accounts and passwords on every website, just connect your wallet.</span></Col>\r\n                            </Row>\r\n                          \r\n                        </Col>\r\n                    </Row>\r\n                  </Container>\r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey=\"MetaMask\">\r\n            <Container className=\"modal_inner_container\">\r\n                {wallet_install?\r\n                <>\r\n                  <Row className=\"pt-4 text-center\">\r\n                    <Col md={12} className=\"metamask_modal_text\"><img className=\"metamask_modal_img\" src={metaMask_img}/></Col>\r\n                    <Col md={12}>\r\n                        <Row className=\"pt-4\">\r\n                        <Col md={12} ><span className=\"metamask_modal_inner_text\">Opening MetaMask</span></Col>\r\n                        <Col md={12} className=\"pt-2\" >\r\n                          {wallet_msg !== null ?\r\n                          <> <span className=\"metamask_modal_subtext\"><FontAwesomeIcon icon={faClose} style={{color:'red',fontSize:'25px'}} /> {wallet_msg}</span></>:\r\n                          <> <span className=\"metamask_modal_subtext\"><FontAwesomeIcon icon={faSpinner} onClick={props.onHide} className=\"fa-spin\"  /> Waiting for connection</span></>}\r\n                         \r\n                          </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n                </>:<>\r\n                <Row className=\"pt-4 text-center\">\r\n                    <Col md={12} className=\"metamask_modal_text\"><img className=\"metamask_modal_img\" src={metaMask_img}/></Col>\r\n                    <Col md={12}>\r\n                        <Row className=\"pt-4\">\r\n                        <Col md={12} ><span className=\"metamask_modal_inner_text\">MetaMask is not installed</span></Col>\r\n                        <Col md={12} className=\"pt-2\" ><span className=\"metamask_modal_subtext\">The MetaMask extension is not installed in your browser</span></Col>\r\n                        <Col md={12} className=\"pt-2\" ><button className=\"metamask_modal_inner_button\" onClick={()=>window.open(\"https://metamask.io/download/\")}>INSTALL</button></Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row></>}\r\n              \r\n            </Container>\r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey=\"Coinbase\">\r\n            <Container className=\"modal_inner_container pt-0\">\r\n           \r\n                \r\n                    <Row className=\"pt-1 text-center\">\r\n                      \r\n                    <Col md={12} ><span className=\"metamask_modal_inner_text pb-1\">Scan with Coinbase Wallet</span></Col>\r\n                    <Col md={12} >\r\n                    {wallet_msg !== null ?<>\r\n                      <> \r\n                      <span className=\"metamask_modal_subtext\" style={{fontSize:'20px'}} ><FontAwesomeIcon icon={faClose} style={{color:'red',fontSize:'20px'}} /> {wallet_msg}</span>\r\n                      </>\r\n                    </>:<> <img style={{width:'75%'}} src={coinbase_qr} alt='qr code' /></>}\r\n                   \r\n                    </Col>\r\n                </Row>\r\n              \r\n            \r\n            </Container>\r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey=\"WalletConnect\">\r\n            <Container className=\"modal_inner_container pt-0\">\r\n                <Row className=\"pt-1 text-center\">\r\n                <Col md={12} ><span className=\"metamask_modal_inner_text pb-1\">Scan with your phone</span></Col>\r\n                    <Col md={12}>\r\n                    <img style={{width:'75%'}} src={wallet_connect_qr} alt='qr code' />\r\n                    </Col>\r\n\r\n                </Row>\r\n            </Container>\r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey=\"connectWallet\">\r\n         \r\n            </Tab.Pane>\r\n              </Tab.Content>\r\n            </Col>\r\n          </Row>\r\n        </Tab.Container>\r\n      </Modal.Body>\r\n    \r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default Walletmodal;\r\n","import React, { useEffect, useState ,useLayoutEffect} from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Tab from \"react-bootstrap/Tab\";\r\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCancel, faCheck, faClose, faCopy, faCross, faLock, faMartiniGlassCitrus, faRightFromBracket, faSpinner, faUser, faUserCircle, faWallet } from \"@fortawesome/free-solid-svg-icons\";\r\nimport metaMask_img from \"../Assests/wallet_logo/metamask.svg\";\r\nimport coinbase_img from \"../Assests/wallet_logo/coinbase.svg\"\r\nimport wallet_connect_img from \"../Assests/wallet_logo/walletconnect.svg\"\r\nimport image_first from \"../Assests/img_1.svg\"\r\nimport image_second from \"../Assests/img_2.svg\"\r\nimport wallet_connect_qr from \"../Assests/wallet_qr.png\"\r\nimport coinbase_qr from \"../Assests/coinbase_qr.png\"\r\nimport { ethers } from \"ethers\";\r\nimport Web3Modal from \"web3modal\";\r\nimport { providerOptions } from \"./providerOptions\";\r\n\r\n\r\n\r\nimport './Disconnect.scss'\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nconst web3Modal = new Web3Modal({\r\n  cacheProvider: true, // optional\r\n  providerOptions // required\r\n});\r\nfunction DisconnectModal(props) {\r\n    const { active,chainId, account, library, connector,provider, activate, deactivate } =useWeb3React();\r\n\r\n const [copyText,setCopyText]=useState(false)\r\n const copyFunc=()=>{\r\n    console.log('here i am')\r\n    navigator.clipboard.writeText(props.walletAddress)\r\n    setCopyText(true)\r\n }\r\n const injected = new InjectedConnector({  \r\n    supportedChainIds: [1,3,4,5, 42,61,137, 1337,80001] \r\n  });\r\n const disconnect_wallet= async()=>{\r\n  console.log('disconnected to wallet')\r\n  try{\r\n    await deactivate(injected)\r\n    await web3Modal.clearCachedProvider();\r\n   \r\n    window.localStorage.clear()\r\n    localStorage.setItem('check_disconnect',true)\r\n    sessionStorage.setItem('walletAddress',false)\r\n    window.location.reload()\r\n  }\r\n  catch(err){\r\n    console.log('not disconnected to wallet ',err)\r\n  }\r\n\r\n  }\r\n    \r\n  return (\r\n    <div>\r\n   <Modal\r\n    {...props}\r\n    size=\"md\"\r\n    aria-labelledby=\"contained-modal-title-vcenter \"\r\n    centered\r\n    id=\"innerDisconnect\"\r\n    \r\n  >\r\n   \r\n    <Modal.Body className=\"p-1 \" >\r\n    <div className=\"wallet_heading_container\">\r\n   <span className=\"wallet_heading\"> <FontAwesomeIcon icon={faClose} onClick={props.onHide} className=\"wallet_close_icon\"  /></span>\r\n              </div>\r\n    \r\n      \r\n        <Row className=\"p-1 h-100\" >\r\n      \r\n         \r\n          <Col sm={12} className=\"text-center\">\r\n          <span className=\"disconnect_modal_img\"><FontAwesomeIcon icon={faUserCircle} className=\"fa light\"  /></span>\r\n          <div className=\"disconnect_modal_address mt-4\"> {props.walletAddress}</div>\r\n\r\n          </Col>\r\n          <Col sm={12} className=\"text-center\">\r\n            <Row>\r\n            <Col sm={6} className=\"text-center\">\r\n            {copyText?\r\n            <>\r\n            <button className=\"disconnect_btn_style\" onClick={() => copyFunc()}>\r\n                     <FontAwesomeIcon icon={faCheck} onClick={props.onHide} className=\"fa light\"  /> Copied\r\n            </button>\r\n            </>:\r\n            <>\r\n              <button className=\"disconnect_btn_style\" onClick={() => copyFunc()}>\r\n                     <FontAwesomeIcon icon={faCopy} onClick={props.onHide} className=\"fa light\"  /> Copy\r\n            </button>\r\n            </>}\r\n            </Col>\r\n            <Col sm={6} className=\"text-center\">\r\n            <button className=\"disconnect_btn_style\" onClick={()=>{disconnect_wallet()}}> <FontAwesomeIcon icon={faRightFromBracket} onClick={props.onHide} className=\"fa regular\"  /> Disconnect</button>\r\n\r\n            </Col>\r\n            </Row>\r\n        \r\n\r\n          </Col>\r\n          \r\n          \r\n        </Row>\r\n  \r\n    </Modal.Body>\r\n  \r\n  </Modal>\r\n    </div>\r\n \r\n  )\r\n}\r\n\r\nexport default DisconnectModal","import React, { useEffect, useState } from 'react'\r\nimport { Button } from 'react-bootstrap';\r\nimport Walletmodal from './Walletmodal';\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { InjectedConnector } from '@web3-react/injected-connector';\r\nimport { WalletLinkConnector } from '@web3-react/walletlink-connector';\r\nimport DisconnectModal from './DisconnectModal';\r\nimport '../bootstrap.min.css';\r\nimport { useMemo } from 'react';\r\nimport { MdLogin } from 'react-icons/md';\r\nimport { BiLogOut } from 'react-icons/bi';\r\n\r\nfunction Wallet(props) {\r\n\r\n      const [modalShow, setModalShow] = useState(false);\r\n      const [disconnectmodalShow, setDisconnectmodalShow] = useState(false);\r\n      const [connect_wallet_address,set_connect_wallet_address]=useState(false)\r\n      const [wallet_address,get_connect_wallet_address]=useState(false)\r\n      const { active,chainId, account, library, connector,provider, activate, deactivate } =useWeb3React();\r\n      console.log('props',props )\r\n     \r\n     //wallet\r\n     const wallet_info = useMemo(() =>props.func_wallet(wallet_address) , [wallet_address]);\r\n     function abd(){\r\n      return wallet_info\r\n     }\r\n\r\n\t if(props){\r\n        if(props.func_wallet){\r\n          abd()\r\n        }\r\n      }\r\n\r\n\r\n      useEffect(()=>{\r\n        \r\n        getCurrentWallet()\r\n      \r\n        \r\n\r\n      },[])\r\n     \r\n\r\n  \r\n   \r\n      const injected = new InjectedConnector({  \r\n        supportedChainIds: [1,3,4,5, 42,61,137, 1337,80001] \r\n      });\r\n      const CoinbaseWallet = new WalletLinkConnector({\r\n        url: `https://polygon-mumbai.g.alchemy.com/v2/7r5JXbmB3DQ8Xj0fKXX58DBna9EJNX4p`,\r\n        appName: \"Web3-react Demo\",\r\n        qrcode: true,\r\n        supportedChainIds: [1, 3, 4, 5, 42],\r\n      });\r\n      \r\n      async function getCurrentWallet(){\r\n        const check_disconnect=localStorage.getItem('check_disconnect')\r\n        if(check_disconnect === 'false'){\r\n\r\n          console.log('window.ethereum',window.ethereum)\r\n          if (window.ethereum) {\r\n            try {\r\n              const addressArray = await window.ethereum.request({\r\n                method: \"eth_accounts\",\r\n              });\r\n              if (addressArray.length > 0) {\r\n                \r\n                if(window.ethereum.isMetaMask){\r\n                  activate(injected)\r\n                }\r\n                else if(window.ethereum.isCoinbaseWallet){\r\n                  activate(CoinbaseWallet)\r\n                }      \r\n                \r\n              }\r\n            } catch (err) {\r\n              if (err.code === 4001) {\r\n                console.log('😥 User Reject Connection Request Retry To Connect');\r\n              }\r\n              else{\r\n                console.log('😥', err.message);\r\n              }\r\n              \r\n            }\r\n          } \r\n          else {\r\n            console.log('😥 install wallet');\r\n          }\r\n        }\r\n        else{\r\n\r\n        }\r\n  \r\n      }\r\n      function getwalletaddress(props){\r\n        if(props !== null){\r\n          get_connect_wallet_address(props)\r\n          set_connect_wallet_address(true)\r\n          setModalShow(false)\r\n        console.table('walletAddress true');\r\n        sessionStorage.setItem('walletAddress',true)\r\n        \r\n\r\n\r\n        }\r\n        else{\r\n          set_connect_wallet_address(false)\r\n          console.table('walletAddress false');\r\n          sessionStorage.setItem('walletAddress',false)\r\n\r\n        }\r\n\r\n      }\r\n      \r\n  \r\n    \r\n  return (\r\n    <div>\r\n      {connect_wallet_address?<>\r\n       <Button className='white' variant=\"primary\" style={{backgroundColor:props?.btn_color?props.btn_color:'',color:props?.btn_text_color?props.btn_text_color:'',width: '156px'}} onClick={() => setDisconnectmodalShow(true)}>\r\n        {/* {wallet_address.slice(0, 11)} .... {wallet_address.slice(wallet_address.length-5)} */}\r\n        <BiLogOut style={{fontSize:'25px'}} className='header-icons white'/>&nbsp; Logout\r\n      </Button></>:\r\n      <Button className='white' variant=\"primary\" style={{backgroundColor:props?.btn_color?props.btn_color:'',color:props?.btn_text_color?props.btn_text_color:'',width: '156px'}}  onClick={() => setModalShow(true)}>\r\n      <MdLogin style={{fontSize:'25px'}} className='header-icons white'/> &nbsp; {props?.btn_name?  props.btn_name  : 'Signup'}\r\n    </Button>\r\n    \r\n      }\r\n    \r\n\r\n      <Walletmodal\r\n        func={getwalletaddress}\r\n        show={modalShow}\r\n        onHide={() =>setModalShow(false)}\r\n        \r\n      />\r\n      <DisconnectModal\r\n        show={disconnectmodalShow}\r\n        onHide={() => setDisconnectmodalShow(false)}\r\n        walletAddress={wallet_address}\r\n        \r\n      />\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Wallet","\r\nimport Walletmodal from './components/Walletmodal';\r\nimport DisconnectModal from './components/DisconnectModal';\r\nimport Wallet from './components/Wallet';\r\nconsole.log = console.warn = console.error = () => {};\r\n\r\n\r\nexport {Wallet, Walletmodal, DisconnectModal };","export default __webpack_public_path__ + \"static/media/COF.190b8bce.gif\";","import React, { Suspense, useState, useEffect} from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\nimport gif from '../Images/COF.gif';\r\nimport '../sass/Mint.scss';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { HashLoader } from 'react-spinners';\r\nimport { Walletmodal } from '../lib';\r\n\r\n\r\nconst Modal_Comp = React.lazy(() => import('../components/Modal_Comp'));\r\nconst Header = React.lazy(() => import('../components/Header'));\r\nconst Banner = React.lazy(() => import('../components/Banner'));\r\nconst Banner1 = React.lazy(() => import('../components/Banner1'));\r\nconst Footer = React.lazy(() => import('../components/Footer'));\r\n\r\n\r\n\r\nfunction Mint() {\r\n\r\n    const [name, setName] = useState();\r\n    const [des, setDes] = useState();\r\n    const [price, setPrice] = useState();\r\n    \r\n    const  [showWallet,setshowWallet] = useState(false)\r\n    const[get_wallet_address,set_wallet_address]=useState(false)\r\n    const[get_modal_show,set_modal_show]=useState(false)\r\n    const [dataSource, setDataSource] =useState([]);\r\n    const [load,setLoader]=useState(true)\r\n    const [modalShow,setModalShow] = useState(false)\r\n\r\n    useEffect(()=>{\r\n        const data = require('../json/Mint.json');\r\n        setName(data[0].name)\r\n        setDes(data[0].description)\r\n        setPrice(data[0].price)\r\n\r\n    })\r\n\r\n       // console.log(data.Minting)\r\n       const mint_func=()=>{\r\n\r\n        if(sessionStorage.getItem('walletAddress') === 'true'){\r\n            setModalShow(true)\r\n            // setLoader(false)\r\n            // setTimeout(()=>{\r\n            // setLoader(true)\r\n\r\n            // setModalShow(true)\r\n            // },[3000])\r\n\r\n            \r\n        }\r\n        else{\r\n\r\n            set_modal_show(true)\r\n        }\r\n        console.table('showWallet',showWallet)\r\n        \r\n    }\r\n\r\n  function getMyWallet(props){\r\n        console.table('getMyWallet11',props)\r\n      \r\n        if(props){\r\n          set_wallet_address(props)\r\n          set_modal_show(false)\r\n        }\r\n      }\r\n\r\n    \r\n\r\n  return (\r\n    <>\r\n    {\r\n   load ? (\r\n        \r\n    <div>\r\n        <Suspense fallback={<div className='mint-loader'><HashLoader size={100}/></div>}>\r\n             <Header />\r\n        <Banner />\r\n    \r\n    {get_modal_show?<Walletmodal show={get_modal_show} onHide={()=>{set_modal_show(false)}} func={getMyWallet}/>  :''}\r\n    \r\n  \r\n    <Container id='mint-container' style={{marginTop:'10em'}}>\r\n        <Row className='margin-bottom'>\r\n            <Col >\r\n            <div className='overlay_img'></div>\r\n            <img \r\n            className='mint-col1-img'\r\n            src={gif} />\r\n            <div className='mint-svg'>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 311.256 29.955\">\r\n                <path id=\"Path_1\" data-name=\"Path 1\" d=\"M27.588,17.322a25.291,25.291,0,0,0-12.627.633c-3.718.978-2.305-1.176-4.772-.947-.262-.682-.969-1.478,1.86-1.678,3.7-.262,7.454-.469,11.212-.6,1.826-.065,3.885.247,1.081-.725-.7-.241,2.447-.156,3.224-.723-2.814-.713-6.213.174-9.183-.393l2.552-1.09c-3.985-1.737-9.855-.752-14.954-1.36C23.831,9.59,40.5,6.851,59.355,6.742a79.6,79.6,0,0,0-18.009-.637c-9.785.567-19.44,1.417-29.4,1.581l.13.05c.044-.5-1.714-.906,1.607-1.314C30.053,4.411,47.164,4.4,64.052,3.863,70,3.674,75.684,2.857,81.773,3.119c-4.362-.241-8.717-.11-13.007-.145-5.558-.046-11.044-.253-16.692-.082-10,.3-19.925.664-29.8,1.332-3.866.262-8.042-.159-11.661.782-.89.231-1.048-.186-1.15-.527-.241-.808,1.358-.665,2.654-.776,8.661-.74,17.593-.561,26.367-.942C44.08,2.519,49,1.249,54.9,1.436l-9.132-.164.016-.156L74.04.558c-2.181.731-4.177.272-5.635.768,21.549-.151,43.086-.054,65.162-.077C130.5.814,127.837.582,125.122.223c6.021.107,12.04.235,18.064.318,12.357.17,24.666-.228,36.965-.534,2.74-.068,4.662.469,7.132.566,8.669.342,17.3-.1,25.976.008,14.678.191,29.221.682,43.81,1.217,10.034.368,20.119.646,30.18.944,4.158.123,7.227.862,10.86,1.243.888.093.836.154-1.346,1.323,6.092.64,12.42-1.222,19,.361-6.892.8-13.487.387-19.77.911,5.4.534,10.6,1.312,18.041.77-4.734,1.482-5.427,2.32.526,2.289,1.121-.006,3.32.342,2.5.554-1.607.413.518,1.307-2.538,1.506a153.7,153.7,0,0,1-15.721.578c4.031.445,5.751,1.583,9.913,1.756-2.635.88-5.331.759-7.7.989-1.547.15-4.1-.049-4.27.8-.192.957,2.9.29,3.926.823-.935.051-1.84.064-2.675.154-1.351.147-3.241-.364-4.062.479-.786.808,3.437.546,2.2,1.382,2.94-.155,3.144,1.242,5.876,1.253-3.125.282-6.368-.029-9.785.472a13.04,13.04,0,0,0,5,.3c3.339-.343,4.956.538,5.368,1.268.592,1.047-2.39.77-4.186.856a12.319,12.319,0,0,0-2.493.18c-4.153,1.671-9.128,2.624-15.9,2.332,5.1.947,10.484.328,16.879.634-7.528,1.838-14.95,1.871-22.168,1.934-11.734.1-23.488-.012-35.149.6a11.865,11.865,0,0,0-3.345.421c-.135.619,2.04.414,2.569,1.037-11.545-.986-23.009-.054-34.359-.457-9.931-.352-19.957-.246-29.785-.114-12.766.172-25.561.384-38.129-.164-16.856-.735-33.817-.047-50.6-.871-1.246-.061-2.612.27-3.954.325-1.162.047-3,.416-2.889-.518.128-1.076-2.553-1.143-4.38-1.211-8.6-.318-17.107-.809-26.6-1.414,10.1-.449,19.178.469,28.222.092-9.593-2.111-20.7-1.536-31.224-2.241H68.176c-3.306-.455-6.59-.018-10.3-.3,1.776-.85,3.243-1.734-1.1-2.115-2.866-.252-5.856.328-8.985-.163,2.6-.657,5.818-.115,9.133-1-12.182.643-23.213-.82-34.361.16-.661-1.379,3.436-.744,4.487-1.355l-.153.048c7.016-.656,13.746.173,20.538.529,7.308.383,14.815-.194,22.035.6l-4.817-1.14H77.3c0-.077.005-.153.009-.23l-21.194-.531c0-.092,0-.185,0-.277l5.361-.309c-4.391-.3-7.512-.838-10.107-.618-6.517.553-14.191-1.354-19.781,1.129a15.291,15.291,0,0,1-2.475-.154l-1.523-.337m65.253,2.266a162.713,162.713,0,0,0-22.008-.13c7.247.631,14.647.308,22.008.13M38.813,9.8a69.739,69.739,0,0,0-14.146.827A109.755,109.755,0,0,0,38.813,9.8\" transform=\"translate(-5.983 0)\" fill=\"#f992b5\"/>\r\n              </svg>\r\n              </div>\r\n            </Col>\r\n            <Col className='mint-col2'>\r\n            <h1 className='mint-col1-h1'>\r\n                {name}\r\n            </h1>\r\n            <p className='mint-col1-p'>\r\n                {des}\r\n            </p>\r\n            <h2 className='mint-col1-h2'>\r\n                Price : ${price} USD\r\n            </h2>\r\n            <Button onClick={()=>mint_func()} variant=\"dark\" className='mint_btn' size=\"lg\">\r\n                Mint\r\n            </Button>\r\n            <Modal_Comp \r\n                show={modalShow}\r\n                onHide={() => setModalShow(false)}\r\n                />\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n    <Banner1/>\r\n\r\n    <Footer />\r\n       </Suspense>\r\n  \r\n\r\n   </div>\r\n): (\r\n    <div className='mint-loader'>\r\n        <HashLoader size={100}  />\r\n    </div>\r\n   )\r\n    }\r\n    </>\r\n \r\n  )\r\n}\r\n\r\nexport default Mint\r\n"],"sourceRoot":""}